/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ErrorTestSystem,
  ErrorTestSystemInterface,
} from "../ErrorTestSystem";

const _abi = [
  {
    inputs: [],
    name: "TestError1",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Position",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "TestError2",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "arg",
        type: "uint256",
      },
    ],
    name: "stub",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50609b8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635f644e3c14602d575b600080fd5b603b6038366004604d565b90565b60405190815260200160405180910390f35b600060208284031215605e57600080fd5b503591905056fea26469706673582212202e65161d3f39d4397fd64d6f7f02b0ab7b8bd0f94f19e47e49bca1c9dd60ae9d64736f6c634300080d0033";

type ErrorTestSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorTestSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ErrorTestSystem__factory extends ContractFactory {
  constructor(...args: ErrorTestSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ErrorTestSystem> {
    return super.deploy(overrides || {}) as Promise<ErrorTestSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ErrorTestSystem {
    return super.attach(address) as ErrorTestSystem;
  }
  override connect(signer: Signer): ErrorTestSystem__factory {
    return super.connect(signer) as ErrorTestSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorTestSystemInterface {
    return new utils.Interface(_abi) as ErrorTestSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ErrorTestSystem {
    return new Contract(address, _abi, signerOrProvider) as ErrorTestSystem;
  }
}
